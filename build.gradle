plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.1-SNAPSHOT" apply false
    id 'java'
}

ext {
    mcVersion = rootProject.minecraft_version
    apiVersion = rootProject.mod_version
}

architectury {
    minecraft = rootProject.minecraft_version
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
    }
}

static def addExclusionsForVersion(int version, Set<String> excludePatterns) {
    for (int i = 1; i <= 3; i++) {
        if (i != version) {
            for (String category : Arrays.asList(
                    "BlockRegistry", "CreativeTabRegistry", "SoundRegistry",
                    "ItemRegistry", "CustomBlockProperties", "CustomItemProperties",
                    "CustomToolTier")) {
                excludePatterns.add(String.format("**/%sSet%d.java", category, i));
            }
        }
    }
}

def versionSet3 = ["1.20.2"]
def versionSet1 = ["1.20", "1.20.1"]
def versionSet2 = ["1.19.3", "1.19.4"]

List<String[]> versionSets = new ArrayList<>()

versionSets.add(versionSet3 as String[])
versionSets.add(versionSet1 as String[])
versionSets.add(versionSet2 as String[])

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "java"

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']

            java {
                include '**/*.java'

                Set<String> excludePatterns = new HashSet<>()

                for (int i = 0; i < versionSets.size(); i++) {
                    String[] versionSet = versionSets.get(i)
                    if (Arrays.asList(versionSet).contains(mcVersion)) {
                        addExclusionsForVersion(i + 1, excludePatterns)
                        break
                    }
                }

                excludePatterns.forEach(exclusion -> exclude(exclusion))
            }
        }
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories { }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
