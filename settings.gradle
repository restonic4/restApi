pluginManagement {
    repositories {
        maven { url "https://maven.fabricmc.net/" }
        maven { url "https://maven.architectury.dev/" }
        maven { url "https://maven.minecraftforge.net/" }
        maven { url "https://maven.neoforged.net/releases" }
        mavenCentral()
        gradlePluginPortal()
    }
}

def propertiesFile = new File(rootProject.projectDir, 'gradle.properties')
def properties = new Properties()
properties.load(propertiesFile.newDataInputStream())

def enabledPlatforms = properties.getProperty('enabled_platforms', '').split(',')

include("common")

if (enabledPlatforms.contains('forge')) {
    include("forge")
}

if (enabledPlatforms.contains('fabric')) {
    include("fabric")
}

if (enabledPlatforms.contains('quilt')) {
    include("quilt")
}

if (enabledPlatforms.contains('neoforge')) {
    include("neoforge")
}

gradle.settingsEvaluated {
    def mcVersion = properties.getProperty('minecraft_version', '')
    def mainAccesswidener = new File("common/src/main/resources/restapi.accesswidener")
    def lookingAccesswidener = new File("common/src/main/resources/restapi_${mcVersion}_.accesswidener")

    if (mainAccesswidener.exists()) {
        println "INFO. Main accesswidener FOUND"

        if (lookingAccesswidener.exists()) {
            println "INFO. accesswidener for ${mcVersion} FOUND"

            mainAccesswidener.text = lookingAccesswidener.text
        } else {
            throw new GradleException("ERROR. accesswidener for ${mcVersion} NOT FOUND.")
        }
    } else {
        throw new GradleException("ERROR. Main accesswidener NOT FOUND.")
    }
}